<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  

  
  <title>this/super | Hexo</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <meta name="description" content="其实有时候java也没那么可怕，今天来讲讲两个很让人头大的关键字this&amp;amp;super this(1)this调用本类中的属性，也就是类中的成员变量； (2)this调用本类中的其他方法； (3)this调用本类中的其他构造方法，调用时要放在构造方法的首行。其实可以简化为两个：（根据java核心技卷一） 1.引用隐式参数， 2.调用改类的其他构造器。 如图所示： 应用一：引用成员变量Publ">
<meta property="og:type" content="article">
<meta property="og:title" content="this&#x2F;super">
<meta property="og:url" content="http:&#x2F;&#x2F;huwj.work&#x2F;java&#x2F;this-super">
<meta property="og:site_name" content="Hexo">
<meta property="og:description" content="其实有时候java也没那么可怕，今天来讲讲两个很让人头大的关键字this&amp;amp;super this(1)this调用本类中的属性，也就是类中的成员变量； (2)this调用本类中的其他方法； (3)this调用本类中的其他构造方法，调用时要放在构造方法的首行。其实可以简化为两个：（根据java核心技卷一） 1.引用隐式参数， 2.调用改类的其他构造器。 如图所示： 应用一：引用成员变量Publ">
<meta property="og:locale" content="en">
<meta property="og:image" content="http:&#x2F;&#x2F;huwj.work&#x2F;images&#x2F;java&#x2F;this&#x2F;0.png">
<meta property="og:image" content="http:&#x2F;&#x2F;huwj.work&#x2F;images&#x2F;java&#x2F;this&#x2F;1.png">
<meta property="og:updated_time" content="2018-10-10T07:45:44.000Z">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="http:&#x2F;&#x2F;huwj.work&#x2F;images&#x2F;java&#x2F;this&#x2F;0.png">
  
    <link rel="alternate" href="/atom.xml" title="Hexo" type="application/atom+xml">
  
  
    <link rel="icon" href="/favicon.png">
  
  
    <link href="//fonts.googleapis.com/css?family=Source+Code+Pro" rel="stylesheet" type="text/css">
  
  <link rel="stylesheet" href="/css/style.css">
</head>

<body>
  <div id="container">
    <div id="wrap">
      <header id="header">
  <div id="banner"></div>
  <div id="header-outer" class="outer">
    <div id="header-title" class="inner">
      <h1 id="logo-wrap">
        <a href="/" id="logo">Hexo</a>
      </h1>
      
    </div>
    <div id="header-inner" class="inner">
      <nav id="main-nav">
        <a id="main-nav-toggle" class="nav-icon"></a>
        
          <a class="main-nav-link" href="/">Home</a>
        
          <a class="main-nav-link" href="/archives">Archives</a>
        
      </nav>
      <nav id="sub-nav">
        
          <a id="nav-rss-link" class="nav-icon" href="/atom.xml" title="RSS Feed"></a>
        
        <a id="nav-search-btn" class="nav-icon" title="Search"></a>
      </nav>
      <div id="search-form-wrap">
        <form action="//google.com/search" method="get" accept-charset="UTF-8" class="search-form"><input type="search" name="q" class="search-form-input" placeholder="Search"><button type="submit" class="search-form-submit">&#xF002;</button><input type="hidden" name="sitesearch" value="http://huwj.work"></form>
      </div>
    </div>
  </div>
</header>
      <div class="outer">
        <section id="main"><article id="post-this-super" class="article article-type-post" itemscope itemprop="blogPost">
  <div class="article-meta">
    <a href="/java/this-super" class="article-date">
  <time datetime="2018-10-10T03:29:58.000Z" itemprop="datePublished">2018-10-10</time>
</a>
    
  <div class="article-category">
    <a class="article-category-link" href="/categories/java/">java</a>
  </div>

  </div>
  <div class="article-inner">
    
    
      <header class="article-header">
        
  
    <h1 class="article-title" itemprop="name">
      this/super
    </h1>
  

      </header>
    
    <div class="article-entry" itemprop="articleBody">
      
        <p>其实有时候java也没那么可怕，今天来讲讲两个很让人头大的关键字this&amp;super</p>
<h2 id="this"><a href="#this" class="headerlink" title="this"></a>this</h2><p>(1)this调用本类中的属性，也就是类中的成员变量；</p>
<p>(2)this调用本类中的其他方法；</p>
<p>(3)this调用本类中的其他构造方法，调用时要放在构造方法的首行。<br>其实可以简化为两个：（根据java核心技卷一）</p>
<p>1.引用隐式参数，</p>
<p>2.调用改类的其他构造器。</p>
<p>如图所示：<br><img src="/images/java/this/0.png" alt="Alt text"></p>
<h3 id="应用一：引用成员变量"><a href="#应用一：引用成员变量" class="headerlink" title="应用一：引用成员变量"></a>应用一：引用成员变量</h3><pre><code>Public Class Student {
String name; //定义一个成员变量name
private void SetName(String name)//定义一个参数(局部变量)name 
{ 
this.name=name; //将局部变量的值传递给成员变量
}
}        </code></pre><p>this这个关键字其代表的就是对象中的成员变量或者方法。也就是说，如果在某个变量前面加上一个this关键字，其指的就是这个对象的成员变量或者方法，而不是指成员方法的形式参数或者局部变量。     </p>
<p>为此在上面这个代码中，this.name代表的就是对象中的成员变量，又叫做对象的属性，而后面的name则是方法的形式参数，代码this.name=name就是将形式参数的值传递给成员变量。</p>
<h3 id="应用二：调用类的构造方法"><a href="#应用二：调用类的构造方法" class="headerlink" title="应用二：调用类的构造方法"></a>应用二：调用类的构造方法</h3><pre><code>public class Student { //定义一个类，类的名字为student。
public Student() { //定义一个方法，名字与类相同故为构造方法  
this(“Hello!”); //调用该类的其他构造器
} 
public Student(String name) { //定义一个带形式参数的构造方法 
}</code></pre><p>在一个类中可以存在多个构造方法，这些构造方法都采用相同的名字，只是形式参数不同。Java语言就凭形式参数不同来判断调用那个构造方法。在本例中，在无参构造器中师兄this(“Hello”)调用下面的带参构造函数。</p>
<h3 id="应用三：返回对象的值"><a href="#应用三：返回对象的值" class="headerlink" title="应用三：返回对象的值"></a>应用三：返回对象的值</h3><h2 id="super"><a href="#super" class="headerlink" title="super"></a>super</h2><p>1.调用父类的方法<br>2.调用父类的构造器函数<br><img src="/images/java/this/1.png" alt="Alt text"></p>

      
    </div>
    <footer class="article-footer">
      <a data-url="http://huwj.work/java/this-super" data-id="ck3gl3ntr001hvkez8serfogl" class="article-share-link">Share</a>
      
      
    </footer>
  </div>
  
    
<nav id="article-nav">
  
    <a href="/java/%E5%8A%A8%E6%80%81%E7%BB%91%E5%AE%9A" id="article-nav-newer" class="article-nav-link-wrap">
      <strong class="article-nav-caption">Newer</strong>
      <div class="article-nav-title">
        
          动态绑定
        
      </div>
    </a>
  
  
    <a href="/java/String-StringBuilder-StringBuffer" id="article-nav-older" class="article-nav-link-wrap">
      <strong class="article-nav-caption">Older</strong>
      <div class="article-nav-title">String/StringBuilder/StringBuffer</div>
    </a>
  
</nav>

  
</article>

</section>
        
          <aside id="sidebar">
  
    
  <div class="widget-wrap">
    <h3 class="widget-title">Categories</h3>
    <div class="widget">
      <ul class="category-list"><li class="category-list-item"><a class="category-list-link" href="/categories/AR/">AR</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/HTML/">HTML</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/book/">book</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/css/">css</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/java/">java</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/js/">js</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/office/">office</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/python/">python</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/spring/">spring</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/">云计算</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%8D%9A%E5%AE%A2/">博客</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/">数据结构</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E7%82%B9%E6%BB%B4%E7%94%9F%E6%B4%BB/">点滴生活</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/">神经网络</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E7%AE%97%E6%B3%95/">算法</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/">计算机网络</a></li></ul>
    </div>
  </div>


  
    

  
    
  
    
  <div class="widget-wrap">
    <h3 class="widget-title">Archives</h3>
    <div class="widget">
      <ul class="archive-list"><li class="archive-list-item"><a class="archive-list-link" href="/archives/2018/11/">November 2018</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2018/10/">October 2018</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2018/09/">September 2018</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2018/08/">August 2018</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2018/07/">July 2018</a></li></ul>
    </div>
  </div>


  
    
  <div class="widget-wrap">
    <h3 class="widget-title">Recent Posts</h3>
    <div class="widget">
      <ul>
        
          <li>
            <a href="/%E7%AE%97%E6%B3%95/%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%BA%8F%E5%88%97%E4%B9%8B%E5%92%8C">最大连续子序列之和</a>
          </li>
        
          <li>
            <a href="/spring/spring-aop-1">spring_aop_代码实现</a>
          </li>
        
          <li>
            <a href="/spring/spring-aop">spring_aop</a>
          </li>
        
          <li>
            <a href="/spring/spring1">spring_DI</a>
          </li>
        
          <li>
            <a href="/java/leetcode">leetcode</a>
          </li>
        
      </ul>
    </div>
  </div>

  
</aside>
        
      </div>
      <footer id="footer">
  
  <div class="outer">
    <div id="footer-info" class="inner">
      &copy; 2019 John Doe<br>
      Powered by <a href="http://hexo.io/" target="_blank">Hexo</a>
    </div>
  </div>
</footer>
    </div>
    <nav id="mobile-nav">
  
    <a href="/" class="mobile-nav-link">Home</a>
  
    <a href="/archives" class="mobile-nav-link">Archives</a>
  
</nav>
    

<script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>


  <link rel="stylesheet" href="/fancybox/jquery.fancybox.css">
  <script src="/fancybox/jquery.fancybox.pack.js"></script>


<script src="/js/script.js"></script>



  </div>
</body>
</html>
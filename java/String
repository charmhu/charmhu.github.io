<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  

  
  <title>String | Hexo</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <meta name="description" content="‘abcd’*1获取 *1.1获取字符串当中的字符的个数int length() *1.2根据位置获取字符 *    char charAt(int index) *     * 1.3根据字符获取在字符串中的第一次出现的位置 *    int indexOf(char c) *      int  indexOf(char c int fromIndex)在指定位置开始对c的查找 *    in">
<meta property="og:type" content="article">
<meta property="og:title" content="String">
<meta property="og:url" content="http:&#x2F;&#x2F;huwj.work&#x2F;java&#x2F;String">
<meta property="og:site_name" content="Hexo">
<meta property="og:description" content="‘abcd’*1获取 *1.1获取字符串当中的字符的个数int length() *1.2根据位置获取字符 *    char charAt(int index) *     * 1.3根据字符获取在字符串中的第一次出现的位置 *    int indexOf(char c) *      int  indexOf(char c int fromIndex)在指定位置开始对c的查找 *    in">
<meta property="og:locale" content="en">
<meta property="og:updated_time" content="2018-10-19T06:53:10.000Z">
<meta name="twitter:card" content="summary">
  
    <link rel="alternate" href="/atom.xml" title="Hexo" type="application/atom+xml">
  
  
    <link rel="icon" href="/favicon.png">
  
  
    <link href="//fonts.googleapis.com/css?family=Source+Code+Pro" rel="stylesheet" type="text/css">
  
  <link rel="stylesheet" href="/css/style.css">
</head>

<body>
  <div id="container">
    <div id="wrap">
      <header id="header">
  <div id="banner"></div>
  <div id="header-outer" class="outer">
    <div id="header-title" class="inner">
      <h1 id="logo-wrap">
        <a href="/" id="logo">Hexo</a>
      </h1>
      
    </div>
    <div id="header-inner" class="inner">
      <nav id="main-nav">
        <a id="main-nav-toggle" class="nav-icon"></a>
        
          <a class="main-nav-link" href="/">Home</a>
        
          <a class="main-nav-link" href="/archives">Archives</a>
        
      </nav>
      <nav id="sub-nav">
        
          <a id="nav-rss-link" class="nav-icon" href="/atom.xml" title="RSS Feed"></a>
        
        <a id="nav-search-btn" class="nav-icon" title="Search"></a>
      </nav>
      <div id="search-form-wrap">
        <form action="//google.com/search" method="get" accept-charset="UTF-8" class="search-form"><input type="search" name="q" class="search-form-input" placeholder="Search"><button type="submit" class="search-form-submit">&#xF002;</button><input type="hidden" name="sitesearch" value="http://huwj.work"></form>
      </div>
    </div>
  </div>
</header>
      <div class="outer">
        <section id="main"><article id="post-String" class="article article-type-post" itemscope itemprop="blogPost">
  <div class="article-meta">
    <a href="/java/String" class="article-date">
  <time datetime="2018-10-19T02:45:43.000Z" itemprop="datePublished">2018-10-19</time>
</a>
    
  <div class="article-category">
    <a class="article-category-link" href="/categories/java/">java</a>
  </div>

  </div>
  <div class="article-inner">
    
    
      <header class="article-header">
        
  
    <h1 class="article-title" itemprop="name">
      String
    </h1>
  

      </header>
    
    <div class="article-entry" itemprop="articleBody">
      
        <h3 id="‘abcd’"><a href="#‘abcd’" class="headerlink" title="‘abcd’"></a>‘abcd’</h3><p><strong>*1获取</strong></p>
<pre><code>*1.1获取字符串当中的字符的个数int length()
*1.2根据位置获取字符
*    char charAt(int index)
*    
* 1.3根据字符获取在字符串中的第一次出现的位置
*    int indexOf(char c)
*      int  indexOf(char c int fromIndex)在指定位置开始对c的查找
*    int indexOf(string str  int fromIndex)在指定位置开始对str的查找
*    
*    从后往前进行查找
*    int lastdexOf(char c)  下角标从0开始算
*      int lastdexOf(char c int fromIndex)在指定位置开始对c的查找
*    int lastdexOf(string str  int fromIndex)在指定位置开始对str的查找
*    
* 1.4获取字符串当中的一部分功能，也叫作子串
*    String substring（int begainindex int endindex）从指定位到endindex位（但是不包括endindex）
*    String substring（int begainindex）下角标从1开始算
*  </code></pre><p><strong>*2 转换</strong></p>
<pre><code>*2.1将字符串转变成字符串数组  （字符串的切割）
*     String[] splite(String regex):涉及到正则表达式
*   2.2将字符串转化为字符数组
*     char[] toCharArray()
*
*   2.2将数组转化为字符串
*private static void stringconstructordemo2() {
*char[] arr= {&apos;a&apos;,&apos;b&apos;,&apos;c&apos;};
*String s1=new String(arr,1,2);
*System.out.println(s1);//输出bc
* }
*
*   2.3将字符串转化为字节数组
*     byte[] getBytes()
*   2.4 将字符串的字幕改为大小写字母
*       String &quot;Abc&quot;.toUpperCase()
*       String &quot;Abc&quot;.toLowerCase()
*   2.5 将字符串的内容进行替换
*      s.replace(&quot;a&quot;,&quot;b&quot;)将字符串s中的a以b代替
*      
*   2.6 s.trim() 去除字符串的两边空格 
*   2.7 s.concat(str)
* </code></pre><p><strong>*3 判断</strong></p>
<pre><code>*3.1两个字符串的内容是否相同
*     s.equalsIgnoreCase(&quot;anotherstring&quot;)//忽略大小写的内容比较
*   3.2字符串当中是否包含另一个String
*     s.contains（&quot;bc&quot;）;
*     或者采用indexOf 若返回-1则没有
*   3.3字符串是否已字符串开头，是否已字符串结尾
* 
* 4比较
*     &quot;abc&quot;.compareTo(&quot;Abc&quot;)
*    
*   
* </code></pre><p><strong>*4 String=”s”跟String s=new String(“s”)</strong> </p>
<pre><code>String s=new String(&quot;s&quot;)并非在常量池中，而是被拆分成char数组进行操作
 String=&quot;s&quot;在常量池中。
public static void main(String[] args) {
 String s1=new String(&quot;abc&quot;);//并非在常量池中，而是被拆分成char数组进行操作
 String s2=s1.intern();//intern（）在常量池中取，若取到，则直接按过来用，若没渠道，则新建一个String对象
 System.out.println(s1==s2);//false
 String s3=&quot;abc&quot;;
 String s4=s3.intern();
 System.out.println(s3==s4);//true
}</code></pre><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><pre><code>package cn.itcast.p1string.demo;

public class stringmthod {

public static void main(String[] args) {

    stringMethodDemo_1();
    stringMethodDemo_2();
    stringMethodDemo_3();
    stringMethodDemo_4();
}

private static void stringMethodDemo_4() {
    System.out.println(&quot;abc&quot;.compareTo(&quot;Abc&quot;));//32 其实就是ascii码相减

}

private static void stringMethodDemo_3() {
    String s=&quot;abc&quot;;
    System.out.println(s.equals(&quot;Abc&quot;.toLowerCase()));//true
    System.out.println(s.equalsIgnoreCase(&quot;abC&quot;));//忽略大小写的内容比较  true
    System.out.println(s.contains(&quot;bc&quot;));//r=true

    String Str=&quot;arraydemo.java&quot;;
    System.out.println(Str.startsWith(&quot;array&quot;));//true
    System.out.println(Str.endsWith(&quot;.java&quot;));//true
    System.out.println(Str.contains(&quot;demo&quot;));//true

}

private static void stringMethodDemo_2() {
    String s=&quot;张三,李四,王五&quot;;
    String[] arr=s.split(&quot;,&quot;);
    for (int i=0;i&lt;arr.length;i++)
        System.out.println(arr[i]);//切割成为 张三 李四 王五
    char[] chs=s.toCharArray();
    for (int i=0;i&lt;chs.length;i++)
        System.out.println(chs[i]);//切割成为   张 三 ，李 四 ，王 五
    String s1=&quot;ab你&quot;;
    byte[] bytes=s1.getBytes();
    for (int i=0;i&lt;bytes.length;i++)
        System.out.println(bytes[i]);//97 98 -60 -29   中文的ascii为负数

    System.out.println(&quot;Abc&quot;.toUpperCase());ABC    


}

private static void stringMethodDemo_1() {
    // TODO Auto-generated method stub
    String s=&quot;abcdae&quot;;
    System.out.println(&quot;length:&quot;+s.length());//6
    System.out.println(&quot;cahr&quot;+s.charAt(2));//c
    System.out.println(&quot;index&quot;+s.indexOf(&quot;a&quot;));//0
    System.out.println(&quot;index&quot;+s.indexOf(&quot;k&quot;));//-1代表字符串（字符）没有这个字符，当然在数组中没有找到这个角标也显示-1
    System.out.println(&quot;lastindex&quot;+s.lastIndexOf(&quot;a&quot;));//4
}

}</code></pre>
      
    </div>
    <footer class="article-footer">
      <a data-url="http://huwj.work/java/String" data-id="ck3gl3nqa0005vkez6mpzepck" class="article-share-link">Share</a>
      
      
    </footer>
  </div>
  
    
<nav id="article-nav">
  
    <a href="/java/stringbuffer" id="article-nav-newer" class="article-nav-link-wrap">
      <strong class="article-nav-caption">Newer</strong>
      <div class="article-nav-title">
        
          stringbuffer
        
      </div>
    </a>
  
  
    <a href="/java/synchronized" id="article-nav-older" class="article-nav-link-wrap">
      <strong class="article-nav-caption">Older</strong>
      <div class="article-nav-title">synchronized</div>
    </a>
  
</nav>

  
</article>

</section>
        
          <aside id="sidebar">
  
    
  <div class="widget-wrap">
    <h3 class="widget-title">Categories</h3>
    <div class="widget">
      <ul class="category-list"><li class="category-list-item"><a class="category-list-link" href="/categories/AR/">AR</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/HTML/">HTML</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/book/">book</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/css/">css</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/java/">java</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/js/">js</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/office/">office</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/python/">python</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/spring/">spring</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/">云计算</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%8D%9A%E5%AE%A2/">博客</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/">数据结构</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E7%82%B9%E6%BB%B4%E7%94%9F%E6%B4%BB/">点滴生活</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/">神经网络</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E7%AE%97%E6%B3%95/">算法</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/">计算机网络</a></li></ul>
    </div>
  </div>


  
    

  
    
  
    
  <div class="widget-wrap">
    <h3 class="widget-title">Archives</h3>
    <div class="widget">
      <ul class="archive-list"><li class="archive-list-item"><a class="archive-list-link" href="/archives/2018/11/">November 2018</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2018/10/">October 2018</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2018/09/">September 2018</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2018/08/">August 2018</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2018/07/">July 2018</a></li></ul>
    </div>
  </div>


  
    
  <div class="widget-wrap">
    <h3 class="widget-title">Recent Posts</h3>
    <div class="widget">
      <ul>
        
          <li>
            <a href="/%E7%AE%97%E6%B3%95/%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%BA%8F%E5%88%97%E4%B9%8B%E5%92%8C">最大连续子序列之和</a>
          </li>
        
          <li>
            <a href="/spring/spring-aop-1">spring_aop_代码实现</a>
          </li>
        
          <li>
            <a href="/spring/spring-aop">spring_aop</a>
          </li>
        
          <li>
            <a href="/spring/spring1">spring_DI</a>
          </li>
        
          <li>
            <a href="/java/leetcode">leetcode</a>
          </li>
        
      </ul>
    </div>
  </div>

  
</aside>
        
      </div>
      <footer id="footer">
  
  <div class="outer">
    <div id="footer-info" class="inner">
      &copy; 2019 John Doe<br>
      Powered by <a href="http://hexo.io/" target="_blank">Hexo</a>
    </div>
  </div>
</footer>
    </div>
    <nav id="mobile-nav">
  
    <a href="/" class="mobile-nav-link">Home</a>
  
    <a href="/archives" class="mobile-nav-link">Archives</a>
  
</nav>
    

<script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>


  <link rel="stylesheet" href="/fancybox/jquery.fancybox.css">
  <script src="/fancybox/jquery.fancybox.pack.js"></script>


<script src="/js/script.js"></script>



  </div>
</body>
</html>
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  

  
  <title>synchronized | Hexo</title>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <meta name="description" content="线程安全 一定要看一下是否有共享数据解决思路，就是将多条操作的共享数据的线程代码封装起来，在一个线程进入到代码块的时候，其他线程不可以参与运算，待上一个线程运行完之后，下一个线程才可以进行计算。同步代码块进行封装;（其实就相当于锁的性质，在线程进入到执行代码块过程中，将其进行锁住，其他线程无法进入到代码块中，也就无法对共享资源进行修改） 好处解决了线程安全的问题 坏处 相对降低了效率，因为同步外的">
<meta property="og:type" content="article">
<meta property="og:title" content="synchronized">
<meta property="og:url" content="http:&#x2F;&#x2F;huwj.work&#x2F;java&#x2F;synchronized">
<meta property="og:site_name" content="Hexo">
<meta property="og:description" content="线程安全 一定要看一下是否有共享数据解决思路，就是将多条操作的共享数据的线程代码封装起来，在一个线程进入到代码块的时候，其他线程不可以参与运算，待上一个线程运行完之后，下一个线程才可以进行计算。同步代码块进行封装;（其实就相当于锁的性质，在线程进入到执行代码块过程中，将其进行锁住，其他线程无法进入到代码块中，也就无法对共享资源进行修改） 好处解决了线程安全的问题 坏处 相对降低了效率，因为同步外的">
<meta property="og:locale" content="en">
<meta property="og:image" content="http:&#x2F;&#x2F;huwj.work&#x2F;images&#x2F;java&#x2F;Thread&#x2F;1.png">
<meta property="og:image" content="http:&#x2F;&#x2F;huwj.work&#x2F;images&#x2F;java&#x2F;Thread&#x2F;2.png">
<meta property="og:image" content="http:&#x2F;&#x2F;huwj.work&#x2F;images&#x2F;java&#x2F;Thread&#x2F;3.png">
<meta property="og:updated_time" content="2018-10-19T04:04:00.000Z">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="http:&#x2F;&#x2F;huwj.work&#x2F;images&#x2F;java&#x2F;Thread&#x2F;1.png">
  
    <link rel="alternate" href="/atom.xml" title="Hexo" type="application/atom+xml">
  
  
    <link rel="icon" href="/favicon.png">
  
  
    <link href="//fonts.googleapis.com/css?family=Source+Code+Pro" rel="stylesheet" type="text/css">
  
  <link rel="stylesheet" href="/css/style.css">
</head>

<body>
  <div id="container">
    <div id="wrap">
      <header id="header">
  <div id="banner"></div>
  <div id="header-outer" class="outer">
    <div id="header-title" class="inner">
      <h1 id="logo-wrap">
        <a href="/" id="logo">Hexo</a>
      </h1>
      
    </div>
    <div id="header-inner" class="inner">
      <nav id="main-nav">
        <a id="main-nav-toggle" class="nav-icon"></a>
        
          <a class="main-nav-link" href="/">Home</a>
        
          <a class="main-nav-link" href="/archives">Archives</a>
        
      </nav>
      <nav id="sub-nav">
        
          <a id="nav-rss-link" class="nav-icon" href="/atom.xml" title="RSS Feed"></a>
        
        <a id="nav-search-btn" class="nav-icon" title="Search"></a>
      </nav>
      <div id="search-form-wrap">
        <form action="//google.com/search" method="get" accept-charset="UTF-8" class="search-form"><input type="search" name="q" class="search-form-input" placeholder="Search"><button type="submit" class="search-form-submit">&#xF002;</button><input type="hidden" name="sitesearch" value="http://huwj.work"></form>
      </div>
    </div>
  </div>
</header>
      <div class="outer">
        <section id="main"><article id="post-synchronized" class="article article-type-post" itemscope itemprop="blogPost">
  <div class="article-meta">
    <a href="/java/synchronized" class="article-date">
  <time datetime="2018-10-12T08:25:31.000Z" itemprop="datePublished">2018-10-12</time>
</a>
    
  <div class="article-category">
    <a class="article-category-link" href="/categories/java/">java</a>
  </div>

  </div>
  <div class="article-inner">
    
    
      <header class="article-header">
        
  
    <h1 class="article-title" itemprop="name">
      synchronized
    </h1>
  

      </header>
    
    <div class="article-entry" itemprop="articleBody">
      
        <h2 id="线程安全-一定要看一下是否有共享数据"><a href="#线程安全-一定要看一下是否有共享数据" class="headerlink" title="线程安全 一定要看一下是否有共享数据"></a>线程安全 一定要看一下是否有共享数据</h2><p><img src="/images/java/Thread/1.png" alt="Alt text"><br>解决思路，就是将多条操作的<strong>共享数据的线程代码封装起来</strong>，在一个线程进入到代码块的时候，其他线程不可以参与运算，待上一个线程运行完之后，下一个线程才可以进行计算。<br>同步代码块进行封装;（其实就相当于锁的性质，在线程进入到执行代码块过程中，将其进行锁住，其他线程无法进入到代码块中，也就无法对共享资源进行修改）</p>
<p>好处解决了线程安全的问题</p>
<p>坏处 相对降低了效率，因为同步外的线程都会判断同步锁</p>
<pre><code>synchronized(对象) {
需要被同步的代码块；
}</code></pre><p><img src="/images/java/Thread/2.png" alt="Alt text"><br><strong>同步的前提：多个线程并且只是用同一个锁</strong>也就是说，上图的Object对象b一定不能放在run()方法中，因为这样就产生了多个锁，需要将锁放在run（）外面，即上图的情况，只产生一把锁。</p>
<p>小例子：<br><img src="/images/java/Thread/3.png" alt="Alt text"><br>解决述问题：</p>
<pre><code>package socket;
/*
 * 需求：连哥哥储户，每个都到银行存钱，每次100元共3次
*/
class Bank{
private int sum;
Object b=new Object();
public void add(int num) {
    synchronized(b) {
    sum=sum+num;
    try {Thread.sleep(100);}catch(InterruptedException e) {}
    //-----&gt;这里需要强调，如果不是一行代码，如果第一个线程进来，还没来得及输出，下一个线程再次进来将打乱程序，故需要锁机制
    System.out.println(&quot;sun=&quot;+sum);
    }
}
}
class Ticket implements Runnable{

private Bank b=new Bank();
public void run() {
    for (int x=0;x&lt;3;x++) {
        b.add(100);
    }
}

}


public static void main(String[] args) {


    Ticket t=new Ticket();
    Thread t1=new Thread(t);
    Thread t2=new Thread(t);
    t1.start();
    t2.start();
}
}</code></pre><p>另外可以直接将函数作为锁：</p>
<p>直接在函数上加SYNCHRONIZED</p>
<p>上述函数:<code>public synchronized void add（int num）</code><br>关于同步函数的锁这里说一下每个锁都需要一个对象，而同步函数的所得对象就是 <strong>this，故在同步代码块与同步函数一起用的时候，同步代码块中的对象需要使用this</strong></p>
<p>当然，同步函数一定的this 而同步代码块为任意，建议使用同步代码块。<br>但是在static中没有this，它加载的是当前字节码对象，故同步代码块需要this.getClass(),其实说白了，<strong>就是让他们使用同一个锁。</strong>参考毕向东的20课的13节</p>

      
    </div>
    <footer class="article-footer">
      <a data-url="http://huwj.work/java/synchronized" data-id="ck3gl3ntj001cvkezajq11kir" class="article-share-link">Share</a>
      
      
    </footer>
  </div>
  
    
<nav id="article-nav">
  
    <a href="/java/String" id="article-nav-newer" class="article-nav-link-wrap">
      <strong class="article-nav-caption">Newer</strong>
      <div class="article-nav-title">
        
          String
        
      </div>
    </a>
  
  
    <a href="/java/%E5%A4%9A%E7%BA%BF%E7%A8%8B0" id="article-nav-older" class="article-nav-link-wrap">
      <strong class="article-nav-caption">Older</strong>
      <div class="article-nav-title">Thread跟Runnable</div>
    </a>
  
</nav>

  
</article>

</section>
        
          <aside id="sidebar">
  
    
  <div class="widget-wrap">
    <h3 class="widget-title">Categories</h3>
    <div class="widget">
      <ul class="category-list"><li class="category-list-item"><a class="category-list-link" href="/categories/AR/">AR</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/HTML/">HTML</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/book/">book</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/css/">css</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/java/">java</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/js/">js</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/office/">office</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/python/">python</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/spring/">spring</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/">云计算</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E5%8D%9A%E5%AE%A2/">博客</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/">数据结构</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E7%82%B9%E6%BB%B4%E7%94%9F%E6%B4%BB/">点滴生活</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/">神经网络</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E7%AE%97%E6%B3%95/">算法</a></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/">计算机网络</a></li></ul>
    </div>
  </div>


  
    

  
    
  
    
  <div class="widget-wrap">
    <h3 class="widget-title">Archives</h3>
    <div class="widget">
      <ul class="archive-list"><li class="archive-list-item"><a class="archive-list-link" href="/archives/2018/11/">November 2018</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2018/10/">October 2018</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2018/09/">September 2018</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2018/08/">August 2018</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2018/07/">July 2018</a></li></ul>
    </div>
  </div>


  
    
  <div class="widget-wrap">
    <h3 class="widget-title">Recent Posts</h3>
    <div class="widget">
      <ul>
        
          <li>
            <a href="/%E7%AE%97%E6%B3%95/%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%BA%8F%E5%88%97%E4%B9%8B%E5%92%8C">最大连续子序列之和</a>
          </li>
        
          <li>
            <a href="/spring/spring-aop-1">spring_aop_代码实现</a>
          </li>
        
          <li>
            <a href="/spring/spring-aop">spring_aop</a>
          </li>
        
          <li>
            <a href="/spring/spring1">spring_DI</a>
          </li>
        
          <li>
            <a href="/java/leetcode">leetcode</a>
          </li>
        
      </ul>
    </div>
  </div>

  
</aside>
        
      </div>
      <footer id="footer">
  
  <div class="outer">
    <div id="footer-info" class="inner">
      &copy; 2019 John Doe<br>
      Powered by <a href="http://hexo.io/" target="_blank">Hexo</a>
    </div>
  </div>
</footer>
    </div>
    <nav id="mobile-nav">
  
    <a href="/" class="mobile-nav-link">Home</a>
  
    <a href="/archives" class="mobile-nav-link">Archives</a>
  
</nav>
    

<script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>


  <link rel="stylesheet" href="/fancybox/jquery.fancybox.css">
  <script src="/fancybox/jquery.fancybox.pack.js"></script>


<script src="/js/script.js"></script>



  </div>
</body>
</html>